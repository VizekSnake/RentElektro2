name: "rentelektro"

include:
  - ./backend_rentelektro/docker-compose.backend.yaml
  - ./frontend_rentelektro/docker-compose.frontend.yaml

services:
  nginx:
    image: nginx:latest
    restart: on-failure
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
      - api-network
      - rentelektro-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - rentelektro-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./backend_rentelektro/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - rentelektro-network

  directus:
    image: directus/directus:latest
    container_name: directus
    env_file:
      - ./backend_rentelektro/envs/db.env
    ports:
      - "8055:8055"
    depends_on:
      - postgres
      - redis
      - mongodb
    volumes:
      - directus-data:/directus
    restart: unless-stopped
    networks:
      - postgres-network
      - redis-network
      - mongodb-network
      - rentelektro-network
      - app-network

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    ports:
      - "9113:9113"
    depends_on:
      - nginx
    networks:
      - rentelektro-network

  cadvisor:
    image: my-custom-cadvisor:latest
    ports:
      - "8090:8090"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - postgres
      - mongodb
      - redis
    networks:
      - postgres-network
      - mongodb-network
      - redis-network

volumes:
  directus-data:

networks:
  rentelektro-network:
    driver: bridge
